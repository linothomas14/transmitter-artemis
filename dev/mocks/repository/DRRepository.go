// Code generated by mockery v2.41.0. DO NOT EDIT.

package mocks

import (
	context "context"
	entity "transmitter-artemis/entity"

	mock "github.com/stretchr/testify/mock"
)

// DRRepository is an autogenerated mock type for the DRRepository type
type DRRepository struct {
	mock.Mock
}

// Produce provides a mock function with given fields: ctx, clientData, drMsg
func (_m *DRRepository) Produce(ctx context.Context, clientData entity.ClientData, drMsg string) error {
	ret := _m.Called(ctx, clientData, drMsg)

	if len(ret) == 0 {
		panic("no return value specified for Produce")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, entity.ClientData, string) error); ok {
		r0 = rf(ctx, clientData, drMsg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewDRRepository creates a new instance of DRRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDRRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *DRRepository {
	mock := &DRRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
